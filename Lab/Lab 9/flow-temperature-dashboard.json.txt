[
    {
        "id": "b2d43d66e20f7510",
        "type": "tab",
        "label": "Lab 9",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ac56d393320b5e0e",
        "type": "comment",
        "z": "b2d43d66e20f7510",
        "name": "Temperature Dashboard by Hoang Do (do000075@algonquinlive.com)",
        "info": "",
        "x": 290,
        "y": 120,
        "wires": []
    },
    {
        "id": "ee97ca2779fb682b",
        "type": "arduino in",
        "z": "b2d43d66e20f7510",
        "name": "Thermistor (A1)",
        "pin": "1",
        "state": "ANALOG",
        "arduino": "418feedc577815d8",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "cf02880790134e24"
            ]
        ]
    },
    {
        "id": "faa332a769582f28",
        "type": "arduino in",
        "z": "b2d43d66e20f7510",
        "name": "PBS (Pin 3)",
        "pin": "3",
        "state": "INPUT",
        "arduino": "418feedc577815d8",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "d0c968ea53df3113"
            ]
        ]
    },
    {
        "id": "cf02880790134e24",
        "type": "function",
        "z": "b2d43d66e20f7510",
        "name": "Convert Pin(A1) to Celsius",
        "func": "flow.set(\"thermistor\", msg.payload);\nvar code = flow.get(\"thermistor\") || 0; \nvar celsius = 0;\n\nif (code <= 289) {\n    celsius = 5 + (code - 289) / 9.82;\n}\nif (code > 289 && code <= 342) {\n    celsius = 10 + (code - 342) / 10.60;\n}\nif (code > 342 && code <= 398) {\n    celsius = 15 + (code - 398) / 11.12;\n}\nif (code > 398 && code <= 455) {\n    celsius = 20 + (code - 455) / 11.36;\n}\nif (code > 455 && code <= 512) {\n    celsius = 25 + (code - 512) / 11.32;\n}\nif (code > 512 && code <= 566) {\n    celsius = 30 + (code - 566) / 11.00;\n}\nif (code > 566 && code <= 619) {\n    celsius = 35 + (code - 619) / 10.44;\n}\nif (code > 619 && code <= 667) {\n    celsius = 40 + (code - 667) / 9.73;\n}\nif (code > 667) {\n    celsius = 45 + (code - 712) / 8.90;\n}\n  \n// msg.payload = code;\n  \nflow.set(\"celsius\", celsius);\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 200,
        "wires": [
            [
                "1512a6b2996757c2",
                "7c1b61cd594d7f17"
            ]
        ]
    },
    {
        "id": "1512a6b2996757c2",
        "type": "function",
        "z": "b2d43d66e20f7510",
        "name": "cache temperature",
        "func": "var temperature = flow.get(\"celsius\");\nmsg.payload = temperature;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 200,
        "wires": [
            [
                "1f600be668ead6a0"
            ]
        ]
    },
    {
        "id": "7c1b61cd594d7f17",
        "type": "debug",
        "z": "b2d43d66e20f7510",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 140,
        "wires": []
    },
    {
        "id": "d0c968ea53df3113",
        "type": "delay",
        "z": "b2d43d66e20f7510",
        "name": "debounce 500ms",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "dffcfb8f37d72244"
            ]
        ]
    },
    {
        "id": "dffcfb8f37d72244",
        "type": "function",
        "z": "b2d43d66e20f7510",
        "name": "Cycle Button Click: 1, 2, 3, 1,...",
        "func": "context.set(\"onOff\", msg.payload);\nvar onOff = context.get(\"onOff\") || 0;\n\nvar state = flow.get(\"pbsState\") || 0; \nvar clickCount = state;\n\nif(onOff == 1){\n    clickCount+=1;\n\n    if(clickCount == 4){\n        clickCount = 1;\n    }\n\n}\nflow.set(\"pbsState\", clickCount);\nmsg.payload = clickCount;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 260,
        "wires": [
            [
                "d20b784eb8d47060"
            ]
        ]
    },
    {
        "id": "d20b784eb8d47060",
        "type": "switch",
        "z": "b2d43d66e20f7510",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 260,
        "wires": [
            [
                "be38ad5db4c2a178",
                "838944370ed9a14c"
            ],
            [
                "77ccbbce059713be",
                "71cd376a7aacb9c0"
            ],
            [
                "3c94de9f8b5b201c",
                "bb667205629ca35c"
            ]
        ]
    },
    {
        "id": "be38ad5db4c2a178",
        "type": "function",
        "z": "b2d43d66e20f7510",
        "name": "Get cached temperature",
        "func": "var temperature = Number(flow.get(\"celsius\") || 0).toFixed();\n//msg.payload = temperature;\nvar label = \"Temperature (°C)\";\nvar units = \"°C\";\nvar min = 0;\nvar max = 50;\n\nmsg = {payload:temperature,ui_control:{min:min,max:max,options:{label:label,units:units}}};\n\n//flow.set(\"label\", \"Temperature (°C)\");\n//flow.set(\"units\", \"°C\");\n//flow.set(\"min\", 0);\n//flow.set(\"max\", 50);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 320,
        "wires": [
            [
                "842d7ac7e3a00c08",
                "adabc1bd3b849278",
                "b8bd24b8937f52eb",
                "c1d73cb534d75098"
            ]
        ]
    },
    {
        "id": "77ccbbce059713be",
        "type": "function",
        "z": "b2d43d66e20f7510",
        "name": "Get cached temperature",
        "func": "var temperature = flow.get(\"celsius\") || 0;\nmsg.payload = temperature;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 400,
        "wires": [
            [
                "ca2660e41715e22f"
            ]
        ]
    },
    {
        "id": "3c94de9f8b5b201c",
        "type": "function",
        "z": "b2d43d66e20f7510",
        "name": "Get cached temperature",
        "func": "var temperature = flow.get(\"celsius\") || 0;\nmsg.payload = temperature;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 480,
        "wires": [
            [
                "bcc26fb85fb9cf68"
            ]
        ]
    },
    {
        "id": "838944370ed9a14c",
        "type": "change",
        "z": "b2d43d66e20f7510",
        "name": "ui_control: Celsius",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{ \"min\":10, \"max\":50 }",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "ui_control.options",
                "pt": "msg",
                "to": "{\"label\":\"Temperature (°C)\",\"units\":\"°C\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "celsius",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 600,
        "wires": [
            [
                "b8bd24b8937f52eb"
            ]
        ]
    },
    {
        "id": "ca2660e41715e22f",
        "type": "function",
        "z": "b2d43d66e20f7510",
        "name": "Convert C to F",
        "func": "var celsius = msg.payload; //celsius\nvar temperature = Number(celsius * 9/5 + 32).toFixed();\n\nflow.set(\"fahrenheit\", temperature);\n//msg.payload = fahrenheit;\nvar label = \"Temperature (°F)\";\nvar units = \"°F\";\nvar min = 32;\nvar max = 100;\n\nmsg = {payload:temperature,ui_control:{min:min,max:max,options:{label:label,units:units}}};\n\n// flow.set(\"label\", \"Temperature (°F)\");\n// flow.set(\"units\", \"°F\");\n// flow.set(\"min\", 32);\n// flow.set(\"max\", 100);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 400,
        "wires": [
            [
                "a683fb0d9d6b7a2a",
                "e99c2ab5cf48a3d0",
                "b8bd24b8937f52eb",
                "1ae7122bfa819851"
            ]
        ]
    },
    {
        "id": "bcc26fb85fb9cf68",
        "type": "function",
        "z": "b2d43d66e20f7510",
        "name": "Convert C to K",
        "func": "var celsius = msg.payload;\nvar temperature = Number(celsius + 273.15).toFixed();\n\nflow.set(\"kelvin\", temperature);\n//msg.payload = kelvin;\nvar label = \"Temperature (°K)\";\nvar units = \"°K\";\nvar min = 200;\nvar max = 400;\n\nmsg = {payload:temperature,ui_control:{min:min,max:max,options:{label:label,units:units}}};\n\n// flow.set(\"label\", \"Temperature (°K)\");\n// flow.set(\"units\", \"°K\");\n// flow.set(\"min\", 200);\n// flow.set(\"max\", 400);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 480,
        "wires": [
            [
                "ef4e63df2adc1d34",
                "c555cb9352f35f3d",
                "b8bd24b8937f52eb",
                "91cdd6d53fe0eaa5"
            ]
        ]
    },
    {
        "id": "842d7ac7e3a00c08",
        "type": "template",
        "z": "b2d43d66e20f7510",
        "name": "Temperature (C)",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Temperature: {{payload}}° Celsius !",
        "output": "str",
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "f0a62a355b55a0f8"
            ]
        ]
    },
    {
        "id": "a683fb0d9d6b7a2a",
        "type": "template",
        "z": "b2d43d66e20f7510",
        "name": "Temperature (F)",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Temperature: {{payload}}° Fahrenheit !",
        "output": "str",
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "85b9239df67a3c80"
            ]
        ]
    },
    {
        "id": "ef4e63df2adc1d34",
        "type": "template",
        "z": "b2d43d66e20f7510",
        "name": "Temperature (K)",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Temperature: {{payload}}° Kelvin !",
        "output": "str",
        "x": 1000,
        "y": 480,
        "wires": [
            [
                "c36c71526c0ff548"
            ]
        ]
    },
    {
        "id": "26144e429ab04c6c",
        "type": "inject",
        "z": "b2d43d66e20f7510",
        "name": "refresh (1s)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 210,
        "y": 740,
        "wires": [
            [
                "1fbb92ef2e7d2ac8"
            ]
        ]
    },
    {
        "id": "1fbb92ef2e7d2ac8",
        "type": "change",
        "z": "b2d43d66e20f7510",
        "name": "delete msg.payload",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 740,
        "wires": [
            [
                "b8bd24b8937f52eb"
            ]
        ]
    },
    {
        "id": "adabc1bd3b849278",
        "type": "template",
        "z": "b2d43d66e20f7510",
        "name": "The temperature is {{payload}} Celsius",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "The temperature is {{payload}} Celsius",
        "output": "str",
        "x": 480,
        "y": 840,
        "wires": [
            [
                "75036628c94c9113"
            ]
        ]
    },
    {
        "id": "e99c2ab5cf48a3d0",
        "type": "template",
        "z": "b2d43d66e20f7510",
        "name": "The temperature is {{payload}} Fahrenheit",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "The temperature is {{payload}} Fahrenheit",
        "output": "str",
        "x": 490,
        "y": 900,
        "wires": [
            [
                "75036628c94c9113"
            ]
        ]
    },
    {
        "id": "c555cb9352f35f3d",
        "type": "template",
        "z": "b2d43d66e20f7510",
        "name": "The temperature is {{payload}} Kelvin",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "The temperature is {{payload}} Kelvin",
        "output": "str",
        "x": 470,
        "y": 960,
        "wires": [
            [
                "75036628c94c9113"
            ]
        ]
    },
    {
        "id": "75036628c94c9113",
        "type": "ui_audio",
        "z": "b2d43d66e20f7510",
        "name": "Say it",
        "group": "418dbe1ed3d5f16d",
        "voice": "urn:moz-tts:sapi:Microsoft David Desktop - English (United States)?en-US",
        "always": "",
        "x": 890,
        "y": 900,
        "wires": []
    },
    {
        "id": "f0a62a355b55a0f8",
        "type": "debug",
        "z": "b2d43d66e20f7510",
        "name": "display: Temperature in Celsius",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 320,
        "wires": []
    },
    {
        "id": "85b9239df67a3c80",
        "type": "debug",
        "z": "b2d43d66e20f7510",
        "name": "display: Temperature in Fahrenheit",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 400,
        "wires": []
    },
    {
        "id": "c36c71526c0ff548",
        "type": "debug",
        "z": "b2d43d66e20f7510",
        "name": "display: Temperature in Kelvin",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 480,
        "wires": []
    },
    {
        "id": "b8bd24b8937f52eb",
        "type": "ui_gauge",
        "z": "b2d43d66e20f7510",
        "name": "Gauge: Temperature",
        "group": "418dbe1ed3d5f16d",
        "order": 6,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": "0",
        "max": "0",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1060,
        "y": 640,
        "wires": []
    },
    {
        "id": "c1d73cb534d75098",
        "type": "ui_chart",
        "z": "b2d43d66e20f7510",
        "name": "[Temperature] Graph Celsius",
        "group": "e157db35155c0772",
        "order": 3,
        "width": "6",
        "height": "9",
        "label": "Temperature (Celsius)",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "Error - No Temperature",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1090,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "1ae7122bfa819851",
        "type": "ui_chart",
        "z": "b2d43d66e20f7510",
        "name": "[Temperature] Graph Fahrenheit",
        "group": "335688a386838aab",
        "order": 3,
        "width": "6",
        "height": "9",
        "label": "Temperature (Fahrenheit)",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "Error - No Temperature",
        "dot": true,
        "ymin": "32",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1100,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "91cdd6d53fe0eaa5",
        "type": "ui_chart",
        "z": "b2d43d66e20f7510",
        "name": "[Temperature] Graph Kelvin",
        "group": "7851013782dab989",
        "order": 3,
        "width": "6",
        "height": "9",
        "label": "Temperature (Kelvin)",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "Error - No Temperature",
        "dot": true,
        "ymin": "200",
        "ymax": "400",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1080,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "6d29c30853c51e4a",
        "type": "ui_text",
        "z": "b2d43d66e20f7510",
        "group": "4ee23bfb4e30a9ce",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "@author",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1060,
        "y": 900,
        "wires": []
    },
    {
        "id": "71cd376a7aacb9c0",
        "type": "change",
        "z": "b2d43d66e20f7510",
        "name": "ui_control: Fahrenheit",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{ \"min\":32, \"max\":100 }",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "ui_control.options",
                "pt": "msg",
                "to": "{\"label\":\"Temperature (°F)\",\"units\":\"°F\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 640,
        "wires": [
            [
                "b8bd24b8937f52eb"
            ]
        ]
    },
    {
        "id": "bb667205629ca35c",
        "type": "change",
        "z": "b2d43d66e20f7510",
        "name": "ui_control: Kelvin",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{ \"min\":32, \"max\":100 }",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "ui_control.options",
                "pt": "msg",
                "to": "{\"label\":\"Temperature (°K)\",\"units\":\"°K\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 680,
        "wires": [
            [
                "b8bd24b8937f52eb"
            ]
        ]
    },
    {
        "id": "1f600be668ead6a0",
        "type": "debug",
        "z": "b2d43d66e20f7510",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 140,
        "wires": []
    },
    {
        "id": "418feedc577815d8",
        "type": "arduino-board",
        "device": "COM5"
    },
    {
        "id": "418dbe1ed3d5f16d",
        "type": "ui_group",
        "name": "Gauge",
        "tab": "3d7ae906a50e476a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e157db35155c0772",
        "type": "ui_group",
        "name": "Graph Celsius",
        "tab": "3d7ae906a50e476a",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "335688a386838aab",
        "type": "ui_group",
        "name": "Graph Fahrenheit",
        "tab": "3d7ae906a50e476a",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7851013782dab989",
        "type": "ui_group",
        "name": "Graph Kelvin",
        "tab": "3d7ae906a50e476a",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4ee23bfb4e30a9ce",
        "type": "ui_group",
        "name": "Author",
        "tab": "1cff18e26c15fe36",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3d7ae906a50e476a",
        "type": "ui_tab",
        "name": "Temperature",
        "icon": "fa-thermometer-empty",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1cff18e26c15fe36",
        "type": "ui_tab",
        "name": "About",
        "icon": "fa-camera-retro",
        "disabled": false,
        "hidden": false
    }
]